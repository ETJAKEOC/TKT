name: Build & Release Latest Kernel
on:
  schedule:
    - cron: '0 0 1 * *' # “Run once a month.”
  workflow_dispatch:
permissions:
  contents: write
  issues: write
  pull-requests: write
  deployments: write

jobs:

  kver-checks:

    runs-on: ubuntu-latest

    outputs:
      latest_release: ${{ steps.latest_release.outputs.release }}
      latest_kernel: ${{ steps.versions.outputs.latest_kernel }}

    steps:

      - name: Checkout TKT
        uses: actions/checkout@v4

      - name: Get latest kernel version
        id: versions
        run: |
          get_latest_kernel() {
            git -c 'versionsort.suffix=-' \
            ls-remote --exit-code --refs --sort='version:refname' --tags https://github.com/gregkh/linux.git '*.*' \
            | cut --delimiter='/' --fields=3 | grep "$1" | tail -n 1
          }

          grep "_current_kernels=(" kconfigs/prepare > current_kernels.txt
          source current_kernels.txt

          latest_kernel=`get_latest_kernel "${_current_kernels[0]}"`
          if [[ "$latest_kernel" =~ "rc" ]]
          then
            latest_kernel=`get_latest_kernel "${_current_kernels[1]}"`
          fi

          echo "latest_kernel=$latest_kernel" >> $GITHUB_OUTPUT

  build:
      needs: [kver-checks]
      if: needs.kver-checks.outputs.latest_kernel != needs.kver-checks.outputs.latest_release
      strategy:
        fail-fast: false
        matrix:
          _cpusched: [eevdf, bore]
          compiler: [gcc, llvm]
          os: [arch, ubuntu, fedora]
      uses: ./.github/workflows/builder-dispatcher.yml
      with:
        _cpusched: ${{ matrix._cpusched }}
        compiler: ${{ matrix.compiler }}
        os: ${{ matrix.os }}

  make-release:

    runs-on: ubuntu-latest

    needs:
      - kver-checks
      - build
    if: needs.build.result == 'success'

    steps:
      - name: Checkout TKT
        uses: actions/checkout@v4

      - name: Download release artifacts
        uses: actions/download-artifact@v4

      - name: Make new release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          files_list=$(find *-kernel-packages-* -type f | paste -sd' ')
          # Generate a dynamic tag, e.g., v6.15-20250603-0121
          dynamic_tag="${{ needs.kver-checks.outputs.latest_kernel }}-$(date +'%Y%m%d-%H%M')"
          gh release create "$dynamic_tag" $files_list --latest \
            --title "TKT $dynamic_tag GitHub CI Autobuilt diet kernels." \
            --notes 'This is a precompiled version of TKT built with the option `_kernel_on_diet` enabled.
            If you encounter issues with it, please build the kernel locally with that option disabled.'
