name: Build Fedora kernel
on:
  workflow_call:
    inputs:
      _cpusched:
        required: true
        type: string
      compiler:
        required: true
        type: string

env:
  _processor_opt: "x86-64"
  _distro: "Fedora"
  _git_mirror: "gregkh"
  _logging_use_script: "no"
  _install_after_building: "no"
  _debugdisable: "true"
  _noccache: "true"
  _STRIP: "true"
  _kernel_on_diet: "true"
  _nofallback: "false"

jobs:
  build-kernel:
    env:
      _cpusched: ${{ inputs._cpusched }}
      compiler: ${{ inputs.compiler }}

    runs-on: ubuntu-latest
    container: fedora:latest

    steps:
      - name: Install dependencies and cleanup
        run: |
          dnf install --assumeyes  --skip-unavailable \
            bc bison ccache clang curl dwarves elfutils-devel elfutils-libelf-devel fedora-packager fedpkg \
            flex gcc-c++ gawk git hostname libXi-devel libudev-devel libuuid-devel lld llvm lz4 make \
            ncurses-devel numactl-dev openssl openssl-devel openssl-devel-engine patchutils perl perl-devel \
            perl-generators pesign python3-devel python3-pip qt5-qtbase-devel rpm-build rpmdevtools rsync \
            schedtool wget xz zstd

          rm -rf /var/cache/dnf/*

      - name: Checkout TKT
        uses: actions/checkout@v4

      - name: Adjust compiler and compile Kernel
        env:
          _cpusched: ${{ inputs._cpusched }}
          compiler: ${{ inputs.compiler }}
        run: |
          git config --global --add safe.directory "$(pwd)"
          if [ "${{ inputs.compiler }}" = "llvm" ] || [ "${{ inputs.compiler }}" = "clang" ]; then
            export KCFLAGS="$KCFLAGS -Wold-style-declaration"
          fi
          sed -i 's/^_distro=".*"/_distro="Fedora"/' customization.cfg
          sed -i 's/^_compiler=".*"/_compiler="${{ inputs.compiler }}"/' customization.cfg
          set +o pipefail
          yes '' | ./install.sh install || true
          set -o pipefail

      - name: Rename RPM files to $arch-linux format
        run: |
          arch=$(uname -m)
          for file in RPMS/kernel*.rpm; do
            base=$(basename "$file")
            mv "$file" "_TKT_${{ env._cpusched }}-${{ inputs.compiler }}/Fedora-linux-${arch}-${base#kernel-}"
          done

      - name: Package RPM files
        run: |
          tar czf Fedora-linux-${{ env._cpusched }}-${{ inputs.compiler }}.tar.gz _TKT_${{ env._cpusched }}-${{ inputs.compiler }}/*.rpm

      - uses: actions/upload-artifact@v4
        with:
          name: fedora-kernel-packages-${{ env._cpusched }}-${{ inputs.compiler }}
          path: Fedora-linux-*.tar.gz

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          tag_name: ${{ github.ref_name }}
          name: "Fedora Kernel Release ${{ github.ref_name }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: Fedora-linux-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
